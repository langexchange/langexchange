version: "3.8"
services:
  # langexchange:
  #   image: langexchange
  #   build:
  #     dockerfile: Dockerfile
  #   container_name: langexchange
  #   ports:
  #     - "443:443"
  #     - "80:80"
  #   environment:
  #     - NODE_ENV=development
  #     - NGINX_HOST=localhost
  #   volumes:
  #     - ./build:/usr/local/src/langex
  #     - ./certs:/etc/nginx/certs
  #   command: nginx-debug -g 'daemon off;'
  
  lec-chatserver:
    image: narutosimaha/lec-chatserver
    user: "ejabberd:"
    # command: ["/bin/sh", "-c", "/home/ejabberd/conf/script.sh"]
    environment: 
      - JWT_KEY=aAa01234567890aAa
      - DB_TYPE=pgsql
      - DB_SERVER=langchat-db
      - DB_PORT=5432
      - DB_NAME=langchat
      - DB_USER=langteam
      - DB_PASSWORD=Aa1234
      - EJABBERD_HOST=localhost
    ports:
      - "5222:5222"
      - "5269:5269"
      - "5280:5280"
      - "5281:443"

  langchat-db:
    image: postgres:15.2
    environment:
      - POSTGRES_DB=langchat
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    ports:
      - 5433:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "langchat", "-U", "langteam" ]
      interval: 10s
      timeout: 5s
      retries: 5

  langchat-flyway:
    image: narutosimaha/flyway-langchat
    # command: -url=jdbc:postgresql://postgres:5432/ejabberd -user=ejabberd -password=ejabberd_password -connectRetries=60 migrate
    environment:
      - DATABASE_NAME=langchat
      - DATABASE_URL=jdbc:postgresql://langchat-db:5432
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    # volumes:
    #   - ./lec-db/langchat/sql:/flyway/sql
    depends_on:
      - langchat-db
    
  langgeneral-db:
    image: postgres:15.2
    environment:
      - POSTGRES_DB=langgeneral
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    ports:
      - 5434:5432
    volumes:
      - pgdata1:/var/lib/postgresql/data
    restart: always
    # healthcheck:
    #   test: [ "CMD", "pg_isready", "-q", "-d", "langchat", "-U", "langteam" ]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

      
  langgeneral-flyway:
    image: narutosimaha/flyway-langgeneral
    # command: -url=jdbc:postgresql://postgres:5432/ejabberd -user=ejabberd -password=ejabberd_password -connectRetries=60 migrate
    environment:
      - DATABASE_NAME=langgeneral
      - DATABASE_URL=jdbc:postgresql://langgeneral-db:5432
      - POSTGRES_USER=langteam
      - POSTGRES_PASSWORD=Aa1234
    # volumes:
    #   - ./lec-db/langchat/sql:/flyway/sql
    depends_on:
      - langgeneral-db
  
  lec-chatgw:
    image: narutosimaha/lec-chatgw
    # command: ["/bin/sh", "-c", "nginx-debug -g 'daemon off;'"]
    command: nginx-debug -g 'daemon off;'
    environment: 
      - NGINX_HOST=localhost
      - CHAT_PORT=80
      - CHAT_HOST=lec-chathelper
      - CHAT_ENDPOINT=app
      - CHAT_SERVER_ENDPOINT=chatws
      - XMPP_WS_PORT=5280
      - XMPP_WS_HOST=lec-chatserver
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - lec-chatserver
      - lec-chathelper

  lec-chathelper:
    image: narutosimaha/lec-chathelper-1:latest
    command: /bin/sh -c "service celeryd start && httpd -D FOREGROUND"
    depends_on:
      - celery-broker
    environment: 
      - CREDENTIALS_KEY=secret
      - HOST=localhost
      - LANGGENERAL_DB_HOST=database-1.cvisbvujuezh.ap-southeast-1.rds.amazonaws.com
      - LANGGENERAL_PASS=t0ps3cr3tt0ps3cr3t
      - LANGGENERAL_DB=langgeneral
      - LANGGENERAL_USER=postgres
      - LANGGENERAL_PORT=5432
      - LANGCHAT_DB=langchat
      - LANGCHAT_DB_HOST=langchat-db
      - LANGCHAT_PASS=Aa1234
      - LANGCHAT_USER=langteam
      - LANGCHAT_PORT=5432
      - TZ=Asia/Ho_Chi_Minh
      - TOKEN_DB_KEY=BCulJ35SlqRnAuxt
      - IV=EF3XDDnCjMpTJ8Pc
      - DJANGO_SECRET_KEY=Ref22pTceiaGogZFA732HXR4xPdtDtKmPs6hzXkNCa4mjWgYzx
      - OLD_SECRET_KEY=Ref22pTceiaGogZFA732HXR4xPdtDtKmPs6hzXkNCa4mjWgYzx
      - LANGCHAT_HOST=localhost
      - S3_ACCESS_KEY=AKIA5RKKGIJLRSD5GHDX
      - S3_SECRET_KEY=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
      - S3_BUCKET=language-exchanged
      - XMPP_UPLOAD_KEY=YOqe6JUVReE/iBJPDgSe25JYjD6vnz7b1Y7cRwRB
      - WEB_SERVER_HOST=lec-chathelper
      - APP_BROKERS=kafka:9092
      - CELERY_RESULT_BACKEND=redis://celery-broker:6379/0
      - CELERY_BROKER_URL=redis://celery-broker:6379/1
      - LOG_FILE_FROM_ROOT=logs/worker.log
    ports:
      - "8082:80"

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.3.2
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000


  # # Topics
  # #   1. Personal info update.
  # #   2. Friend relationship update: friend and unfriend.
  # kafka:
  #   image: confluentinc/cp-kafka:7.3.2
  #   ports:
  #   # To learn about configuring Kafka for access across networks see
  #   # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://broker:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  

  zookeeper-server:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
    - "2181:80"
    environment:
    - ALLOW_ANONYMOUS_LOGIN=yes
    restart: always
    volumes:
    - "zookeeper_data:/bitnami"


  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
    - zookeeper-server
    ports:
    - "9093:9093"
    - "9092:9092"
    environment:
    - KAFKA_ENABLE_KRAFT=no
    - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
    - KAFKA_LISTENERS=PLAINTEXT_HOST://0.0.0.0:9093,PLAINTEXT://0.0.0.0:9092
    - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_HOST
    restart: always
    volumes:
    - "kafka_data:/bitnami"


  celery-broker:
    image: redis
    ports:
      - "6379:6379"
  

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      # KAFKA_BROKERCONNECT: "101.99.31.28:9093"
      # KAFKA_BROKERCONNECT: "172.20.10.232:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  

  lec-chatfront:
    image: narutosimaha/lec-chatfront
    command: ["nginx-debug", "-g", "daemon off;"]
    ports:
      - "8043:443"
    environment:
      - NGINX_HOST=localhost
  

  lec-chatbot:
    image: narutosimaha/lec-chatbot
    command: ["python", "main.py", "-d"]
    environment: 
      - MODEL_NAME=small
      - BOT_PASSWORD=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODc4NzIxMTYsImlhdCI6MTY3Nzg2NzMxNywiaWQiOiJjaGF0Ym90In0.Fw9nVmXw5ASMQQZvtsLjISwrtQq3smPAjqO_fXpTyuQ
      - BOT_JID=chatbot@localhost
      - LANGEX_XMPP_HOSTNAME=lec-chatserver
      - LANGEX_XMPP_PORT=5222
      - APP_BROKERS=kafka:9092
      - LANGEX_CHATDB_STRING=postgresql://langteam:Aa1234@langchat-db:5432/langchat
      - PLATFORM=DOCKER
      - FILE_SERVICE=lec-chatgw
      - MODE=development
    volumes:
      - model:/app/lec-chatbot/chatbot/models/whisper/model
      - model_cache:/root/.cache/huggingface

#     ##THUONG SERVICE
  consul:
    image: consul:${TAG:-latest}
    command: consul agent -dev -log-level=warn -ui -client=0.0.0.0
    hostname: consul
    container_name: le-consul
    restart: always
    ports:
    - "8500:8500"

  le-file-service:
    image: thuongnguyen158/le-file-service:latest
    container_name: file-service
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      S3_BUCKET_NAME: language-exchanged
      AWS_ACCESS_KEY_ID: AKIA5RKKGIJL6UQB7W4J
      AWS_SECRET_ACCESS_KEY: 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
      MINIO_HOST: http://127.0.0.1:9000
      CONSUL_URL: http://consul:8500

    depends_on:
      - consul
    restart: always
    ports:
    - "5000:80"

  ###############
  # access url to see http://localhost:5002/swagger/index.html
  le-user-service:
    image: thuongnguyen158/le-user-service:latest
    container_name: user-service
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CONSUL_URL: http://consul:8500
      DB_CONNECTION_STRING: Host=database-1.cvisbvujuezh.ap-southeast-1.rds.amazonaws.com;Port=5432;Database=langgeneral;Username=postgres;Password=t0ps3cr3tt0ps3cr3t
      SECRET_KEY: c9a56074-ac16-11ed-afa1-0242ac1200023b8f9f24-ac17-11ed-afa1-0242ac12000241c27614-ac17-11ed-afa1-0242ac120002
      NEO4J_DATABASE: neo4j
      #azure neo4j
      # NEO4J_HOST: bolt://20.195.209.186:7687
      # #aws neo4j
      NEO4J_HOST: bolt://3.1.50.59:7687
      #localhost neo4j
      # NEO4J_HOST: bolt://localhost:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: t0ps3cr3tt0ps3cr3t
      CHAT_DOMAIN: localhost
      MESSAGE_BUS_HOST: kafka:9092
      HOST_PREFIX: ""
      
    depends_on:
      - consul
      - kafka
    restart: always
    ports:
    - "5002:80"


  le-notification-service:
    image: thuongnguyen158/le-notification-service:latest
    container_name: notification-service
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      SECRET_KEY: c9a56074-ac16-11ed-afa1-0242ac1200023b8f9f24-ac17-11ed-afa1-0242ac12000241c27614-ac17-11ed-afa1-0242ac120002
      DB_CONNECTION_STRING: Host=database-1.cvisbvujuezh.ap-southeast-1.rds.amazonaws.com;Port=5432;Database=langgeneral;Username=postgres;Password=t0ps3cr3tt0ps3cr3t
      CRON_JOB_DB_CONNECTION_STRING: "Host=database-1.cvisbvujuezh.ap-southeast-1.rds.amazonaws.com;Port=5432;Database=background_cronjob;Username=postgres;Password=t0ps3cr3tt0ps3cr3t;Pooling=true;Minimum Pool Size=0;Maximum Pool Size=25"
      CONSUL_URL: http://consul:8500
      MESSAGE_BUS_HOST: kafka:9092
      HOST_PREFIX: ""
      
    depends_on:
      - consul
      - kafka
    restart: always
    ports:
    - "5003:80"


  le-admin-service:
      image: thuongnguyen158/le-admin-service:latest
      container_name: admin-service
      environment:
        ASPNETCORE_ENVIRONMENT: Development
        SECRET_KEY: c9a56074-ac16-11ed-afa1-0242ac1200023b8f9f24-ac17-11ed-afa1-0242ac12000241c27614-ac17-11ed-afa1-0242ac120002
        DB_CONNECTION_STRING: Host=database-1.cvisbvujuezh.ap-southeast-1.rds.amazonaws.com;Port=5432;Database=langgeneral;Username=postgres;Password=t0ps3cr3tt0ps3cr3t
        CONSUL_URL: http://consul:8500
        
      depends_on:
        - consul
      restart: always
      ports:
      - "5004:80"


networks:
  default:
    name: vutl

volumes:
  pgdata:
  pgdata1:
  model:
  model_cache:
  data:
  zookeeper_data:
  kafka_data: